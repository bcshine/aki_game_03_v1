{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import Scene1 from'./components/Scene1';import Scene2 from'./components/Scene2';import Scene3 from'./components/Scene3';import Scene4 from'./components/Scene4';import Scene5 from'./components/Scene5';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const[currentScene,setCurrentScene]=useState(1);const[gameResult,setGameResult]=useState(null);const nextScene=()=>{setCurrentScene(prev=>prev+1);};const resetGame=()=>{setCurrentScene(1);setGameResult(null);};const handleCardSelect=(cardNumber,selectedCard)=>{// 상품 목록과 당첨 확률\nconst prizes=[{name:\"웰컴드링크\",probability:12},{name:\"홍삼스틱\",probability:10},{name:\"상품권 1만원\",probability:5},{name:\"상품권 3만원\",probability:2},{name:\"상품권 5만원\",probability:1},{name:\"음료수\",probability:10},{name:\"꽝\",probability:45},{name:\"표고와사비\",probability:10},{name:\"사케 300ml\",probability:5}];// 확률에 따른 추첨\nconst random=Math.random()*100;let cumulative=0;let selectedPrize=\"꽝\";for(const prize of prizes){cumulative+=prize.probability;if(random<=cumulative){selectedPrize=prize.name;break;}}const isWin=selectedPrize!==\"꽝\";const result={cardNumber,selectedCard,prize:selectedPrize,isWin};setGameResult(result);nextScene();};const renderScene=()=>{switch(currentScene){case 1:return/*#__PURE__*/_jsx(Scene1,{onStart:nextScene});case 2:return/*#__PURE__*/_jsx(Scene2,{onCardSelect:handleCardSelect});case 3:return/*#__PURE__*/_jsx(Scene3,{onComplete:nextScene,result:gameResult});case 4:return/*#__PURE__*/_jsx(Scene4,{result:gameResult,onNext:nextScene,onReset:resetGame});case 5:return/*#__PURE__*/_jsx(Scene5,{result:gameResult,onReset:resetGame});default:return/*#__PURE__*/_jsx(Scene1,{onStart:nextScene});}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:renderScene()});}export default App;","map":{"version":3,"names":["React","useState","Scene1","Scene2","Scene3","Scene4","Scene5","jsx","_jsx","App","currentScene","setCurrentScene","gameResult","setGameResult","nextScene","prev","resetGame","handleCardSelect","cardNumber","selectedCard","prizes","name","probability","random","Math","cumulative","selectedPrize","prize","isWin","result","renderScene","onStart","onCardSelect","onComplete","onNext","onReset","className","children"],"sources":["C:/Users/USER/Documents/GitHub/event_games/aki_game_02/aki_game_02/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Scene1 from './components/Scene1';\nimport Scene2 from './components/Scene2';\nimport Scene3 from './components/Scene3';\nimport Scene4 from './components/Scene4';\nimport Scene5 from './components/Scene5';\n\n\nexport interface SelectedCard {\n  id: number;\n  value: string;\n  suit: string;\n  imagePath: string;\n}\n\nexport interface GameResult {\n  cardNumber: number;\n  selectedCard: SelectedCard;\n  prize: string;\n  isWin: boolean;\n}\n\nfunction App() {\n  const [currentScene, setCurrentScene] = useState(1);\n  const [gameResult, setGameResult] = useState<GameResult | null>(null);\n\n  const nextScene = () => {\n    setCurrentScene(prev => prev + 1);\n  };\n\n  const resetGame = () => {\n    setCurrentScene(1);\n    setGameResult(null);\n  };\n\n  const handleCardSelect = (cardNumber: number, selectedCard: SelectedCard) => {\n    // 상품 목록과 당첨 확률\n    const prizes = [\n      { name: \"웰컴드링크\", probability: 12 },\n      { name: \"홍삼스틱\", probability: 10 },\n      { name: \"상품권 1만원\", probability: 5 },\n      { name: \"상품권 3만원\", probability: 2 },\n      { name: \"상품권 5만원\", probability: 1 },\n      { name: \"음료수\", probability: 10 },\n      { name: \"꽝\", probability: 45 },\n      { name: \"표고와사비\", probability: 10 },\n      { name: \"사케 300ml\", probability: 5 }\n    ];\n\n    // 확률에 따른 추첨\n    const random = Math.random() * 100;\n    let cumulative = 0;\n    let selectedPrize = \"꽝\";\n    \n    for (const prize of prizes) {\n      cumulative += prize.probability;\n      if (random <= cumulative) {\n        selectedPrize = prize.name;\n        break;\n      }\n    }\n\n    const isWin = selectedPrize !== \"꽝\";\n\n    const result: GameResult = {\n      cardNumber,\n      selectedCard,\n      prize: selectedPrize,\n      isWin\n    };\n\n    setGameResult(result);\n    nextScene();\n  };\n\n  const renderScene = () => {\n    switch (currentScene) {\n      case 1:\n        return <Scene1 onStart={nextScene} />;\n      case 2:\n        return <Scene2 onCardSelect={handleCardSelect} />;\n      case 3:\n        return <Scene3 onComplete={nextScene} result={gameResult} />;\n              case 4:\n          return <Scene4 result={gameResult} onNext={nextScene} onReset={resetGame} />;\n        case 5:\n          return <Scene5 result={gameResult} onReset={resetGame} />;\n      default:\n        return <Scene1 onStart={nextScene} />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {renderScene()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}